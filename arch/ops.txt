cmd  encoding   flags   size  cycles     time  semantics            example
ACI  11001110   ZSCPA      2       2        7  A = A + data + fC   |A=2, data=1, fC=1 => A=4
ADC  10001r/m   ZSCPA      1     1/2      4/7  A = A + r/m + fC    |A=2, B=1, r/m=b000, fC=1 => A=4
ADD  10000r/m   ZSPCA      1     1/2      4/7  A = A + r/m         |A=2, C=1, fC=1, r/m=b001 => A=3
ADI  11000110   ZSCPA      2       2        7  A = A + data        |A=42, data=3, fC=0 => A=45
ANA  10100r/m   ZSCPA      1     1/2      4/7  A = A & r/m         |A=2, D=1, r/m=b010 => A=1
ANI  11100110   ZSPCA      2       2        7  A = A & data        |A=2, data=1 => A=1
CALL 11001101   -          3       5       17  CALL(addr)
Ccnd 11cnd100   -          3     3/5    11/17  cnd -> CALL(addr)
CMA  00101111   -          1       1        4  A = !A              |A=0x51 => A=0xAE
CMC  00111111   C          1       1        4  fC = !fC            |fC=0 => fC=1
CMP  10111r/m   ZSPCA      1     1/2      4/7  A - r/m             |fC=1, A=0x0A, E=0x05, r/m=b011 => fC=0;
                                                                   |fC=0, A=0x02, E=0x05, r/m=b011 => fC=1;
                                                                   |fZ=0, A=0x0A, E=0x0A, r/m=b011 => fZ=1;
                                                                   |fC=1, A=-0x1B, E=0x05, r/m=b011 => fC=0
CPI  11111110   ZSPCA      2       2        7  A - data            |fC=1, A=0x0A, data=0x05 => fC=0
DAA  00100111   ZSPCA      1       1        4  A = DA(A)           |A=0x9B => A=1, fC=1, fA=1
DAD  00rp1001   C          1       3       10  HL = HL + rp        |D=1, E=0, H=1, L=1, rp=b01 => H=2, L=1;
                                                                   |B=0x33, C=0x9F, H=0xA1, L=0x7B, rp=b00 => H=0xD5, L=0x1A
DCR  00r/m101   ZSPA       1     1/3     5/10  r/m = r/m - 1       |r/m=b110, H=0x3A, L=0x7C, MEM(0x3A7C)=2 => MEM(0x3A7C)=1;
                                                                   |r/m=b111, A=42 => A=41
DCX  00rp1011   -          1       1        5  rp = rp - 1         |rp=b10, H=0x98, L=0x00 => H=0x97, L=0xFF
POP  11rp0001   *          1       3       10  rp = pop()          |fZ=1, rp=b11, stack=0 => fZ=0;
                                                                   |rp=b00, B=1, C=1, stack=0 => B=0, C=0
PUSH 11rp0101   *          1       3       11  push(rp)            |rp=b10, H=1, L=1 => stack=0x0101
RAL  00010111   C          1       1        4  A = rotLeftC(A)     |fC=1, A=0xF0 => fC=1, A=0xE1
RAR  00011111   C          1       1        4  A = rotRightC(A)    |fC=1, A=0x01 => fC=1, A=0x80
RLC  00000111   C          1       1        4  A = rotLeft(A)      |fC=0, A=0x70 => fC=1, A=0xE1
RRC  00001111   C          1       1        4  A = rotRight(A)     |fC=0, A=0x01 => fC=1, A=0x80
Rcnd 11cnd000   -          1     1/3     5/11  cnd -> return()
RET  11001001   -          1       3       10  return()
RST  11num111   -          1       3       11  CALL(n*8)
SBB  10011r/m   ZSCPA      1     1/2      4/7  A = A - r/m - fC    |fC=1, A=3, B=1, r/m=b000 => A=1
SBI  11011110   ZSCPA      2       2        7  A = A - data - fC   |fC=1, A=3, data=1 => A=1
SHLD 00100010   -          3       5       16  MEM(data) = H:L     |H=2, L=3, data=0x1122 => MEM(0x1122)=3, MEM(0x1123)=2
SPHL 11111001   -          1       1        5  SP = H:L            |H=2, L=3 => SP=0x0203
STA  00110010   -          3       4       13  MEM(data) = A       |A=42, data=0x3344 => MEM(0x3344)=42
STAX 00rp0010   -          1       2        7  MEM(rp) = A         |B=1, C=2, A=42, rp=b00 => MEM(0x0102)=42
STC  00110111   C          1       1        4  fC=1                |fC=0 => fC=1
SUB  10010r/m   ZSCPA      1     1/2      4/7  A = A - r/m         |fC=1, A=3, B=1, r/m=b000 => A=2
SUI  11010110   ZSCPA      2       2        7  A = A - data        |fC=1, A=3, data=1 => A=2
XCHG 11101011   -          1       1        4  swap(D:E, H:L)      |D=1, E=2, H=3, L=4 => D=3, E=4, H=1, L= 2
XRA  10101r/m   ZSPCA      1     1/2      4/7  A = A ^ r/m         |A=3, B=7, r/m=b000 => A=4
XRI  11101110   ZSPCA      2       2        7  A = A ^ data        |A=2, data=7 => A=5
XTHL 11100011   -          1       5       18  swap(H:L, MEM(SP))  |SP=42, MEM(42)=1, MEM(43)=2, H=3, L=4 => L=1, H=2, MEM(42)=4, MEM(43)=3
DI   11110011   -          1       1        4  interrupts(false)
EI   11111011   -          1       1        4  interrupts(true)
HLT  01110110   -          1       1        7  halt()              | => PC=0
IN   11011011   -          2       3       10  A = port(data)      |data=1, port(1)=2, A=0 => A=2
INR  00r/m100   ZSPA       1     1/3     5/10  r/m = r/m + 1       |r/m=b011, E=3 => E=4
INX  00rp0011   -          1       1        5  rp = rp + 1         |rp=b01, D=1, E=0xFF => D=2, E=0
JMP  11000011   -          3       3       10  goto(data)          |PC=42, data=38 => PC=38
Jcnd 11cnd010   -          3       3       10  cnd -> goto(data)   |cnd=b001, fZ=1, PC=42, data=24 => PC=24
LDA  00111010   -          3       4       13  A=MEM(data)         |MEM(42)=34, data=42, A=0 => A=34
LDAX 000r1010   -          1       2        7  A=MEM(r)            |r=1, D=1, E=2, MEM(0x0102)=42, A=0 => A42
LHLD 00101010   -          3       5       16  H:L=MEM(data)       |MEM(0x0102)=0x0304, data=0x0102 => H=3, L=4
LXI  00rp0001   -          3       3       10  rp=data             |data=0x0102, rp=b11 => SP=0x0102
MOV  01dddsss   -          1     1/2      5/7  ddd=sss             |ddd=b010, sss=b101, D=1, L=2 => D=2, L=2
MVI  00r/m110   -          2     2/3     7/10  r/m=data            |A=0, r/m=b111, data=1 => A=1
NOP  00000000   -          1       1        4  nop()               |PC=23 => PC=24
ORA  10110r/m   ZSPCA      1     1/2      4/7  A = A | r/m         |r/m=0, B=1, A=2 => A=3
ORI  11110110   ZSPCA      2       2        7  A = A | data        |data=2, A=5 => A=7
OUT  11010011   -          2       3       10  port(data) = A      |data=2, A=5 => port(2)=5
PCHL 11101001   -          1       1        5  PC=H:L              |PC=1, H=2, L=3 => PC=0x0203
